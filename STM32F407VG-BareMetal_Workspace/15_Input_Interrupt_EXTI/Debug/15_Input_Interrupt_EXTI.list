
15_Input_Interrupt_EXTI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000258  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003e0  080003e8  000013e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003e0  080003e0  000013e8  2**0
                  CONTENTS
  4 .ARM          00000000  080003e0  080003e0  000013e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003e0  080003e8  000013e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003e0  080003e0  000013e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003e4  080003e4  000013e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000013e8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000013e8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000aaf  00000000  00000000  00001418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000284  00000000  00000000  00001ec7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00002150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000052  00000000  00000000  000021d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000166a2  00000000  00000000  00002222  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000be1  00000000  00000000  000188c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0007e96a  00000000  00000000  000194a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00097e0f  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000e8  00000000  00000000  00097e54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000089  00000000  00000000  00097f3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080003c8 	.word	0x080003c8

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	080003c8 	.word	0x080003c8

080001c8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	4603      	mov	r3, r0
 80001d0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001d6:	2b00      	cmp	r3, #0
 80001d8:	db0b      	blt.n	80001f2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001da:	79fb      	ldrb	r3, [r7, #7]
 80001dc:	f003 021f 	and.w	r2, r3, #31
 80001e0:	4907      	ldr	r1, [pc, #28]	@ (8000200 <__NVIC_EnableIRQ+0x38>)
 80001e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e6:	095b      	lsrs	r3, r3, #5
 80001e8:	2001      	movs	r0, #1
 80001ea:	fa00 f202 	lsl.w	r2, r0, r2
 80001ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	e000e100 	.word	0xe000e100

08000204 <pa0_exti_init>:
#include "exti.h"

#define GPIOAEN         (1U<<0)
#define SYSCFGEN		(1U<<14)

void pa0_exti_init(void){
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000208:	b672      	cpsid	i
}
 800020a:	bf00      	nop

	/*Disable global interrupts*/
	__disable_irq();

	//enable clock access to GPIOD
	RCC->AHB1ENR |= GPIOAEN;
 800020c:	4b12      	ldr	r3, [pc, #72]	@ (8000258 <pa0_exti_init+0x54>)
 800020e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000210:	4a11      	ldr	r2, [pc, #68]	@ (8000258 <pa0_exti_init+0x54>)
 8000212:	f043 0301 	orr.w	r3, r3, #1
 8000216:	6313      	str	r3, [r2, #48]	@ 0x30

	//set PA0 as input pin
	GPIOA->MODER &= ~((1U<<1)|(1U<<0));
 8000218:	4b10      	ldr	r3, [pc, #64]	@ (800025c <pa0_exti_init+0x58>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	4a0f      	ldr	r2, [pc, #60]	@ (800025c <pa0_exti_init+0x58>)
 800021e:	f023 0303 	bic.w	r3, r3, #3
 8000222:	6013      	str	r3, [r2, #0]

	//Enable clock access to SYSCFG
	RCC->APB2ENR |=SYSCFGEN;
 8000224:	4b0c      	ldr	r3, [pc, #48]	@ (8000258 <pa0_exti_init+0x54>)
 8000226:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000228:	4a0b      	ldr	r2, [pc, #44]	@ (8000258 <pa0_exti_init+0x54>)
 800022a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800022e:	6453      	str	r3, [r2, #68]	@ 0x44

	//Select PORTA for EXTI0
	//SYSCFG->EXTICR[0] &= ~((1U<<3)|(1U<<2)|(1U<<1)|(1U<<0));

	//unmask EXTI0
	EXTI->IMR |= (1U<<0);
 8000230:	4b0b      	ldr	r3, [pc, #44]	@ (8000260 <pa0_exti_init+0x5c>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	4a0a      	ldr	r2, [pc, #40]	@ (8000260 <pa0_exti_init+0x5c>)
 8000236:	f043 0301 	orr.w	r3, r3, #1
 800023a:	6013      	str	r3, [r2, #0]

	//Select falling edge trigger
	EXTI->FTSR |= (1U<<0);
 800023c:	4b08      	ldr	r3, [pc, #32]	@ (8000260 <pa0_exti_init+0x5c>)
 800023e:	68db      	ldr	r3, [r3, #12]
 8000240:	4a07      	ldr	r2, [pc, #28]	@ (8000260 <pa0_exti_init+0x5c>)
 8000242:	f043 0301 	orr.w	r3, r3, #1
 8000246:	60d3      	str	r3, [r2, #12]

	//Enable EXTI0 line in NVIC
	NVIC_EnableIRQ(EXTI0_IRQn);
 8000248:	2006      	movs	r0, #6
 800024a:	f7ff ffbd 	bl	80001c8 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 800024e:	b662      	cpsie	i
}
 8000250:	bf00      	nop


	//Enabl global interrupt
	__enable_irq();

}
 8000252:	bf00      	nop
 8000254:	bd80      	pop	{r7, pc}
 8000256:	bf00      	nop
 8000258:	40023800 	.word	0x40023800
 800025c:	40020000 	.word	0x40020000
 8000260:	40013c00 	.word	0x40013c00

08000264 <main>:
#define PushButton_PA0  (1U<<0)

static void exti_callback(void);
void EXTI0_IRQHandler(void);

int main(void){
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0

	//enable clock access to GPIOD
	RCC->AHB1ENR |= GPIODEN;
 8000268:	4b1c      	ldr	r3, [pc, #112]	@ (80002dc <main+0x78>)
 800026a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800026c:	4a1b      	ldr	r2, [pc, #108]	@ (80002dc <main+0x78>)
 800026e:	f043 0308 	orr.w	r3, r3, #8
 8000272:	6313      	str	r3, [r2, #48]	@ 0x30

	//set PD12 as output pin
	GPIOD->MODER |=(1<<24);
 8000274:	4b1a      	ldr	r3, [pc, #104]	@ (80002e0 <main+0x7c>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a19      	ldr	r2, [pc, #100]	@ (80002e0 <main+0x7c>)
 800027a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800027e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<25);
 8000280:	4b17      	ldr	r3, [pc, #92]	@ (80002e0 <main+0x7c>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a16      	ldr	r2, [pc, #88]	@ (80002e0 <main+0x7c>)
 8000286:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 800028a:	6013      	str	r3, [r2, #0]

	//set PD13 as output pin
	GPIOD->MODER |=(1<<26);
 800028c:	4b14      	ldr	r3, [pc, #80]	@ (80002e0 <main+0x7c>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a13      	ldr	r2, [pc, #76]	@ (80002e0 <main+0x7c>)
 8000292:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000296:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<27);
 8000298:	4b11      	ldr	r3, [pc, #68]	@ (80002e0 <main+0x7c>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	4a10      	ldr	r2, [pc, #64]	@ (80002e0 <main+0x7c>)
 800029e:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 80002a2:	6013      	str	r3, [r2, #0]

	//set PD14 as output pin
	GPIOD->MODER |=(1<<28);
 80002a4:	4b0e      	ldr	r3, [pc, #56]	@ (80002e0 <main+0x7c>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	4a0d      	ldr	r2, [pc, #52]	@ (80002e0 <main+0x7c>)
 80002aa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80002ae:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<29);
 80002b0:	4b0b      	ldr	r3, [pc, #44]	@ (80002e0 <main+0x7c>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	4a0a      	ldr	r2, [pc, #40]	@ (80002e0 <main+0x7c>)
 80002b6:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 80002ba:	6013      	str	r3, [r2, #0]

	//set PD12 as output pin
	GPIOD->MODER |=(1<<30);
 80002bc:	4b08      	ldr	r3, [pc, #32]	@ (80002e0 <main+0x7c>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	4a07      	ldr	r2, [pc, #28]	@ (80002e0 <main+0x7c>)
 80002c2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80002c6:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<31);
 80002c8:	4b05      	ldr	r3, [pc, #20]	@ (80002e0 <main+0x7c>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	4a04      	ldr	r2, [pc, #16]	@ (80002e0 <main+0x7c>)
 80002ce:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80002d2:	6013      	str	r3, [r2, #0]

	pa0_exti_init();
 80002d4:	f7ff ff96 	bl	8000204 <pa0_exti_init>

	while(1){
 80002d8:	bf00      	nop
 80002da:	e7fd      	b.n	80002d8 <main+0x74>
 80002dc:	40023800 	.word	0x40023800
 80002e0:	40020c00 	.word	0x40020c00

080002e4 <exti_callback>:

	}
}

static void exti_callback(void){
 80002e4:	b480      	push	{r7}
 80002e6:	af00      	add	r7, sp, #0
	//printf("BTN Pressed...\n\r");
	GPIOD->ODR ^=(LED_PIN_PD12|LED_PIN_PD13|LED_PIN_PD14|LED_PIN_PD15);
 80002e8:	4b05      	ldr	r3, [pc, #20]	@ (8000300 <exti_callback+0x1c>)
 80002ea:	695b      	ldr	r3, [r3, #20]
 80002ec:	4a04      	ldr	r2, [pc, #16]	@ (8000300 <exti_callback+0x1c>)
 80002ee:	f483 4370 	eor.w	r3, r3, #61440	@ 0xf000
 80002f2:	6153      	str	r3, [r2, #20]
}
 80002f4:	bf00      	nop
 80002f6:	46bd      	mov	sp, r7
 80002f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	40020c00 	.word	0x40020c00

08000304 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void){
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
	if((EXTI->PR & LINE0)!=0){
 8000308:	4b07      	ldr	r3, [pc, #28]	@ (8000328 <EXTI0_IRQHandler+0x24>)
 800030a:	695b      	ldr	r3, [r3, #20]
 800030c:	f003 0301 	and.w	r3, r3, #1
 8000310:	2b00      	cmp	r3, #0
 8000312:	d007      	beq.n	8000324 <EXTI0_IRQHandler+0x20>
		/*Clear PR flag*/
		EXTI->PR |=LINE0;
 8000314:	4b04      	ldr	r3, [pc, #16]	@ (8000328 <EXTI0_IRQHandler+0x24>)
 8000316:	695b      	ldr	r3, [r3, #20]
 8000318:	4a03      	ldr	r2, [pc, #12]	@ (8000328 <EXTI0_IRQHandler+0x24>)
 800031a:	f043 0301 	orr.w	r3, r3, #1
 800031e:	6153      	str	r3, [r2, #20]
		//Do something...
		exti_callback();
 8000320:	f7ff ffe0 	bl	80002e4 <exti_callback>
	}

}
 8000324:	bf00      	nop
 8000326:	bd80      	pop	{r7, pc}
 8000328:	40013c00 	.word	0x40013c00

0800032c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800032c:	480d      	ldr	r0, [pc, #52]	@ (8000364 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800032e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000330:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000334:	480c      	ldr	r0, [pc, #48]	@ (8000368 <LoopForever+0x6>)
  ldr r1, =_edata
 8000336:	490d      	ldr	r1, [pc, #52]	@ (800036c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000338:	4a0d      	ldr	r2, [pc, #52]	@ (8000370 <LoopForever+0xe>)
  movs r3, #0
 800033a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800033c:	e002      	b.n	8000344 <LoopCopyDataInit>

0800033e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800033e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000340:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000342:	3304      	adds	r3, #4

08000344 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000344:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000346:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000348:	d3f9      	bcc.n	800033e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800034a:	4a0a      	ldr	r2, [pc, #40]	@ (8000374 <LoopForever+0x12>)
  ldr r4, =_ebss
 800034c:	4c0a      	ldr	r4, [pc, #40]	@ (8000378 <LoopForever+0x16>)
  movs r3, #0
 800034e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000350:	e001      	b.n	8000356 <LoopFillZerobss>

08000352 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000352:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000354:	3204      	adds	r2, #4

08000356 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000356:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000358:	d3fb      	bcc.n	8000352 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800035a:	f000 f811 	bl	8000380 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800035e:	f7ff ff81 	bl	8000264 <main>

08000362 <LoopForever>:

LoopForever:
  b LoopForever
 8000362:	e7fe      	b.n	8000362 <LoopForever>
  ldr   r0, =_estack
 8000364:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000368:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800036c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000370:	080003e8 	.word	0x080003e8
  ldr r2, =_sbss
 8000374:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000378:	2000001c 	.word	0x2000001c

0800037c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800037c:	e7fe      	b.n	800037c <ADC_IRQHandler>
	...

08000380 <__libc_init_array>:
 8000380:	b570      	push	{r4, r5, r6, lr}
 8000382:	4d0d      	ldr	r5, [pc, #52]	@ (80003b8 <__libc_init_array+0x38>)
 8000384:	4c0d      	ldr	r4, [pc, #52]	@ (80003bc <__libc_init_array+0x3c>)
 8000386:	1b64      	subs	r4, r4, r5
 8000388:	10a4      	asrs	r4, r4, #2
 800038a:	2600      	movs	r6, #0
 800038c:	42a6      	cmp	r6, r4
 800038e:	d109      	bne.n	80003a4 <__libc_init_array+0x24>
 8000390:	4d0b      	ldr	r5, [pc, #44]	@ (80003c0 <__libc_init_array+0x40>)
 8000392:	4c0c      	ldr	r4, [pc, #48]	@ (80003c4 <__libc_init_array+0x44>)
 8000394:	f000 f818 	bl	80003c8 <_init>
 8000398:	1b64      	subs	r4, r4, r5
 800039a:	10a4      	asrs	r4, r4, #2
 800039c:	2600      	movs	r6, #0
 800039e:	42a6      	cmp	r6, r4
 80003a0:	d105      	bne.n	80003ae <__libc_init_array+0x2e>
 80003a2:	bd70      	pop	{r4, r5, r6, pc}
 80003a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a8:	4798      	blx	r3
 80003aa:	3601      	adds	r6, #1
 80003ac:	e7ee      	b.n	800038c <__libc_init_array+0xc>
 80003ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80003b2:	4798      	blx	r3
 80003b4:	3601      	adds	r6, #1
 80003b6:	e7f2      	b.n	800039e <__libc_init_array+0x1e>
 80003b8:	080003e0 	.word	0x080003e0
 80003bc:	080003e0 	.word	0x080003e0
 80003c0:	080003e0 	.word	0x080003e0
 80003c4:	080003e4 	.word	0x080003e4

080003c8 <_init>:
 80003c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ca:	bf00      	nop
 80003cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ce:	bc08      	pop	{r3}
 80003d0:	469e      	mov	lr, r3
 80003d2:	4770      	bx	lr

080003d4 <_fini>:
 80003d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003d6:	bf00      	nop
 80003d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003da:	bc08      	pop	{r3}
 80003dc:	469e      	mov	lr, r3
 80003de:	4770      	bx	lr
