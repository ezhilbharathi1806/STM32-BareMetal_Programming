
11_systick_delay.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001d8  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000360  08000368  00001368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000360  08000360  00001368  2**0
                  CONTENTS
  4 .ARM          00000000  08000360  08000360  00001368  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000360  08000368  00001368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000360  08000360  00001360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000364  08000364  00001364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001368  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001368  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000041a  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001c7  00000000  00000000  000017b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  00001980  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000040  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0002c540  00000000  00000000  00001a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000b6c  00000000  00000000  0002df68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00088540  00000000  00000000  0002ead4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000b7014  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000090  00000000  00000000  000b7058  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007f  00000000  00000000  000b70e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000348 	.word	0x08000348

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000348 	.word	0x08000348

080001c8 <main>:
#define LED_PIN_PD12  (1U<<12)
#define LED_PIN_PD13  (1U<<13)
#define LED_PIN_PD14  (1U<<14)
#define LED_PIN_PD15  (1U<<15)

int main(void){
 80001c8:	b580      	push	{r7, lr}
 80001ca:	af00      	add	r7, sp, #0

	//enable clock access to GPIOA
	RCC->AHB1ENR |= GPIODEN;
 80001cc:	4b20      	ldr	r3, [pc, #128]	@ (8000250 <main+0x88>)
 80001ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001d0:	4a1f      	ldr	r2, [pc, #124]	@ (8000250 <main+0x88>)
 80001d2:	f043 0308 	orr.w	r3, r3, #8
 80001d6:	6313      	str	r3, [r2, #48]	@ 0x30

	//set PD12 as output pin
	GPIOD->MODER |=(1<<24);
 80001d8:	4b1e      	ldr	r3, [pc, #120]	@ (8000254 <main+0x8c>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	4a1d      	ldr	r2, [pc, #116]	@ (8000254 <main+0x8c>)
 80001de:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001e2:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<25);
 80001e4:	4b1b      	ldr	r3, [pc, #108]	@ (8000254 <main+0x8c>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a1a      	ldr	r2, [pc, #104]	@ (8000254 <main+0x8c>)
 80001ea:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 80001ee:	6013      	str	r3, [r2, #0]

	//set PD13 as output pin
	GPIOD->MODER |=(1<<26);
 80001f0:	4b18      	ldr	r3, [pc, #96]	@ (8000254 <main+0x8c>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a17      	ldr	r2, [pc, #92]	@ (8000254 <main+0x8c>)
 80001f6:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 80001fa:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<27);
 80001fc:	4b15      	ldr	r3, [pc, #84]	@ (8000254 <main+0x8c>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a14      	ldr	r2, [pc, #80]	@ (8000254 <main+0x8c>)
 8000202:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8000206:	6013      	str	r3, [r2, #0]

	//set PD14 as output pin
	GPIOD->MODER |=(1<<28);
 8000208:	4b12      	ldr	r3, [pc, #72]	@ (8000254 <main+0x8c>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a11      	ldr	r2, [pc, #68]	@ (8000254 <main+0x8c>)
 800020e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000212:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<29);
 8000214:	4b0f      	ldr	r3, [pc, #60]	@ (8000254 <main+0x8c>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a0e      	ldr	r2, [pc, #56]	@ (8000254 <main+0x8c>)
 800021a:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800021e:	6013      	str	r3, [r2, #0]

	//set PD12 as output pin
	GPIOD->MODER |=(1<<30);
 8000220:	4b0c      	ldr	r3, [pc, #48]	@ (8000254 <main+0x8c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a0b      	ldr	r2, [pc, #44]	@ (8000254 <main+0x8c>)
 8000226:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800022a:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~(1<<31);
 800022c:	4b09      	ldr	r3, [pc, #36]	@ (8000254 <main+0x8c>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a08      	ldr	r2, [pc, #32]	@ (8000254 <main+0x8c>)
 8000232:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8000236:	6013      	str	r3, [r2, #0]

	while(1){
		//Toggle user leds on PD12, PD13, PD14, PD15
		GPIOD->ODR ^=(LED_PIN_PD12|LED_PIN_PD13|LED_PIN_PD14|LED_PIN_PD15);
 8000238:	4b06      	ldr	r3, [pc, #24]	@ (8000254 <main+0x8c>)
 800023a:	695b      	ldr	r3, [r3, #20]
 800023c:	4a05      	ldr	r2, [pc, #20]	@ (8000254 <main+0x8c>)
 800023e:	f483 4370 	eor.w	r3, r3, #61440	@ 0xf000
 8000242:	6153      	str	r3, [r2, #20]

		SystickDelayMs(100);
 8000244:	2064      	movs	r0, #100	@ 0x64
 8000246:	f000 f807 	bl	8000258 <SystickDelayMs>
		GPIOD->ODR ^=(LED_PIN_PD12|LED_PIN_PD13|LED_PIN_PD14|LED_PIN_PD15);
 800024a:	bf00      	nop
 800024c:	e7f4      	b.n	8000238 <main+0x70>
 800024e:	bf00      	nop
 8000250:	40023800 	.word	0x40023800
 8000254:	40020c00 	.word	0x40020c00

08000258 <SystickDelayMs>:
#define	CTRL_ENABLE					(1U<<0)
#define CTRL_CLKSRC					(1U<<2)
#define CTRL_COUNTFLAG				(1U<<16)


void SystickDelayMs(uint32_t delay){
 8000258:	b480      	push	{r7}
 800025a:	b085      	sub	sp, #20
 800025c:	af00      	add	r7, sp, #0
 800025e:	6078      	str	r0, [r7, #4]
	/*Reload with number of clocks per millisecond*/
	SysTick->LOAD	= SYSTICK_LOAD_VAL;
 8000260:	4b11      	ldr	r3, [pc, #68]	@ (80002a8 <SystickDelayMs+0x50>)
 8000262:	f44f 527a 	mov.w	r2, #16000	@ 0x3e80
 8000266:	605a      	str	r2, [r3, #4]

	/*Clear systick current value register */
	SysTick->VAL = 0;
 8000268:	4b0f      	ldr	r3, [pc, #60]	@ (80002a8 <SystickDelayMs+0x50>)
 800026a:	2200      	movs	r2, #0
 800026c:	609a      	str	r2, [r3, #8]

	/*Enable systick and select internal clk src*/
	SysTick->CTRL = CTRL_ENABLE | CTRL_CLKSRC;
 800026e:	4b0e      	ldr	r3, [pc, #56]	@ (80002a8 <SystickDelayMs+0x50>)
 8000270:	2205      	movs	r2, #5
 8000272:	601a      	str	r2, [r3, #0]

	for(uint32_t i=0; i<delay ; i++){
 8000274:	2300      	movs	r3, #0
 8000276:	60fb      	str	r3, [r7, #12]
 8000278:	e009      	b.n	800028e <SystickDelayMs+0x36>

		/*Wait until the COUNTFLAG is set*/

		while((SysTick->CTRL &  CTRL_COUNTFLAG) == 0){}
 800027a:	bf00      	nop
 800027c:	4b0a      	ldr	r3, [pc, #40]	@ (80002a8 <SystickDelayMs+0x50>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000284:	2b00      	cmp	r3, #0
 8000286:	d0f9      	beq.n	800027c <SystickDelayMs+0x24>
	for(uint32_t i=0; i<delay ; i++){
 8000288:	68fb      	ldr	r3, [r7, #12]
 800028a:	3301      	adds	r3, #1
 800028c:	60fb      	str	r3, [r7, #12]
 800028e:	68fa      	ldr	r2, [r7, #12]
 8000290:	687b      	ldr	r3, [r7, #4]
 8000292:	429a      	cmp	r2, r3
 8000294:	d3f1      	bcc.n	800027a <SystickDelayMs+0x22>

	}

	SysTick->CTRL = 0;
 8000296:	4b04      	ldr	r3, [pc, #16]	@ (80002a8 <SystickDelayMs+0x50>)
 8000298:	2200      	movs	r2, #0
 800029a:	601a      	str	r2, [r3, #0]
}
 800029c:	bf00      	nop
 800029e:	3714      	adds	r7, #20
 80002a0:	46bd      	mov	sp, r7
 80002a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a6:	4770      	bx	lr
 80002a8:	e000e010 	.word	0xe000e010

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	@ (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	@ (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	@ (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	@ (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	@ (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	@ (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 f811 	bl	8000300 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002de:	f7ff ff73 	bl	80001c8 <main>

080002e2 <LoopForever>:

LoopForever:
  b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f0:	08000368 	.word	0x08000368
  ldr r2, =_sbss
 80002f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f8:	2000001c 	.word	0x2000001c

080002fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC_IRQHandler>
	...

08000300 <__libc_init_array>:
 8000300:	b570      	push	{r4, r5, r6, lr}
 8000302:	4d0d      	ldr	r5, [pc, #52]	@ (8000338 <__libc_init_array+0x38>)
 8000304:	4c0d      	ldr	r4, [pc, #52]	@ (800033c <__libc_init_array+0x3c>)
 8000306:	1b64      	subs	r4, r4, r5
 8000308:	10a4      	asrs	r4, r4, #2
 800030a:	2600      	movs	r6, #0
 800030c:	42a6      	cmp	r6, r4
 800030e:	d109      	bne.n	8000324 <__libc_init_array+0x24>
 8000310:	4d0b      	ldr	r5, [pc, #44]	@ (8000340 <__libc_init_array+0x40>)
 8000312:	4c0c      	ldr	r4, [pc, #48]	@ (8000344 <__libc_init_array+0x44>)
 8000314:	f000 f818 	bl	8000348 <_init>
 8000318:	1b64      	subs	r4, r4, r5
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	2600      	movs	r6, #0
 800031e:	42a6      	cmp	r6, r4
 8000320:	d105      	bne.n	800032e <__libc_init_array+0x2e>
 8000322:	bd70      	pop	{r4, r5, r6, pc}
 8000324:	f855 3b04 	ldr.w	r3, [r5], #4
 8000328:	4798      	blx	r3
 800032a:	3601      	adds	r6, #1
 800032c:	e7ee      	b.n	800030c <__libc_init_array+0xc>
 800032e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000332:	4798      	blx	r3
 8000334:	3601      	adds	r6, #1
 8000336:	e7f2      	b.n	800031e <__libc_init_array+0x1e>
 8000338:	08000360 	.word	0x08000360
 800033c:	08000360 	.word	0x08000360
 8000340:	08000360 	.word	0x08000360
 8000344:	08000364 	.word	0x08000364

08000348 <_init>:
 8000348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034a:	bf00      	nop
 800034c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034e:	bc08      	pop	{r3}
 8000350:	469e      	mov	lr, r3
 8000352:	4770      	bx	lr

08000354 <_fini>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr
