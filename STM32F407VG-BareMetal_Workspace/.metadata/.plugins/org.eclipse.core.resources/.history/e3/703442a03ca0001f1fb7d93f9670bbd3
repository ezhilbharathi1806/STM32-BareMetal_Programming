//D0-D7 -> PA0-PA7
//RS -> PA8
//RW -> PA9
//E -> PA10

#include "lcd.h"

#define GPIOAEN	(1U<<0)

#define  RS		(1U<<8)
#define RW		(1U<<9)
#define E		(1U<<10)

void GPIO_Init(void){
	//enable clock access to PortA
	RCC->AHB1ENR |= GPIOAEN;

	//set output mode to PA0 to PA10 pins
	//PA0
	GPIOA->MODER |= (1U<<0);
	GPIOA->MODER &= (1U<<1);
	//PA1
	GPIOA->MODER |= (1U<<2);
	GPIOA->MODER &= (1U<<3);
	//PA2
	GPIOA->MODER |= (1U<<4);
	GPIOA->MODER &= (1U<<5);
	//PA3
	GPIOA->MODER |= (1U<<6);
	GPIOA->MODER &= (1U<<7);
	//PA4
	GPIOA->MODER |= (1U<<8);
	GPIOA->MODER &= (1U<<9);
	//PA5
	GPIOA->MODER |= (1U<<10);
	GPIOA->MODER &= (1U<<11);
	//PA6
	GPIOA->MODER |= (1U<<12);
	GPIOA->MODER &= (1U<<13);
	//PA7
	GPIOA->MODER |= (1U<<14);
	GPIOA->MODER &= (1U<<15);
	//PA8
	GPIOA->MODER |= (1U<<16);
	GPIOA->MODER &= (1U<<17);
	//PA9
	GPIOA->MODER |= (1U<<18);
	GPIOA->MODER &= (1U<<19);
	//PA10
	GPIOA->MODER |= (1U<<20);
	GPIOA->MODER &= (1U<<21);

}
void LCD_command(unsigned char command);
void LCD_data(char data);
void LCD_Init(void);

/* delay n milliseconds (16 MHz CPU clock) */
void delayMs(int delay) {
    int i;
    for (; delay > 0; delay--){
        for (i = 0; i < 3195; i++)
				{}
			}
}


