
19_Timer2_Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f8  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000390  08000398  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000390  08000390  00001398  2**0
                  CONTENTS
  4 .ARM          00000000  08000390  08000390  00001398  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000390  08000398  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000390  08000390  00001390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000394  08000394  00001394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001398  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000398  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000398  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b47  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000271  00000000  00000000  00001f0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000088  00000000  00000000  00002180  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000057  00000000  00000000  00002208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000e9dd  00000000  00000000  0000225f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000d1c  00000000  00000000  00010c3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00053c4b  00000000  00000000  00011958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000655a3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000108  00000000  00000000  000655e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000083  00000000  00000000  000656f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000378 	.word	0x08000378

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	08000378 	.word	0x08000378

080001d8 <main>:
#define LED				   		PIN5

static void tim2_callback(void);

int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0


	/*1.Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 80001dc:	4b0a      	ldr	r3, [pc, #40]	@ (8000208 <main+0x30>)
 80001de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e0:	4a09      	ldr	r2, [pc, #36]	@ (8000208 <main+0x30>)
 80001e2:	f043 0301 	orr.w	r3, r3, #1
 80001e6:	6313      	str	r3, [r2, #48]	@ 0x30

	/*2.Set PA5 as output pin*/
	GPIOA->MODER |= (1U<<10);
 80001e8:	4b08      	ldr	r3, [pc, #32]	@ (800020c <main+0x34>)
 80001ea:	681b      	ldr	r3, [r3, #0]
 80001ec:	4a07      	ldr	r2, [pc, #28]	@ (800020c <main+0x34>)
 80001ee:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80001f2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 80001f4:	4b05      	ldr	r3, [pc, #20]	@ (800020c <main+0x34>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a04      	ldr	r2, [pc, #16]	@ (800020c <main+0x34>)
 80001fa:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80001fe:	6013      	str	r3, [r2, #0]


	tim2_1hz_interrupt_init();
 8000200:	f000 f842 	bl	8000288 <tim2_1hz_interrupt_init>


	while(1)
 8000204:	bf00      	nop
 8000206:	e7fd      	b.n	8000204 <main+0x2c>
 8000208:	40023800 	.word	0x40023800
 800020c:	40020000 	.word	0x40020000

08000210 <tim2_callback>:
	}

}

static void tim2_callback(void)
{
 8000210:	b480      	push	{r7}
 8000212:	af00      	add	r7, sp, #0
	//printf("A second passed !! \n\r");
	GPIOA->ODR ^=LED;
 8000214:	4b05      	ldr	r3, [pc, #20]	@ (800022c <tim2_callback+0x1c>)
 8000216:	695b      	ldr	r3, [r3, #20]
 8000218:	4a04      	ldr	r2, [pc, #16]	@ (800022c <tim2_callback+0x1c>)
 800021a:	f083 0320 	eor.w	r3, r3, #32
 800021e:	6153      	str	r3, [r2, #20]
}
 8000220:	bf00      	nop
 8000222:	46bd      	mov	sp, r7
 8000224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	40020000 	.word	0x40020000

08000230 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void) {
 8000230:	b580      	push	{r7, lr}
 8000232:	af00      	add	r7, sp, #0

	/*Clear update interrupt flag*/
	TIM2->SR &=~SR_UIF;
 8000234:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000238:	691b      	ldr	r3, [r3, #16]
 800023a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800023e:	f023 0301 	bic.w	r3, r3, #1
 8000242:	6113      	str	r3, [r2, #16]

	//Do something..
	tim2_callback();
 8000244:	f7ff ffe4 	bl	8000210 <tim2_callback>

}
 8000248:	bf00      	nop
 800024a:	bd80      	pop	{r7, pc}

0800024c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800024c:	b480      	push	{r7}
 800024e:	b083      	sub	sp, #12
 8000250:	af00      	add	r7, sp, #0
 8000252:	4603      	mov	r3, r0
 8000254:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000256:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800025a:	2b00      	cmp	r3, #0
 800025c:	db0b      	blt.n	8000276 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800025e:	79fb      	ldrb	r3, [r7, #7]
 8000260:	f003 021f 	and.w	r2, r3, #31
 8000264:	4907      	ldr	r1, [pc, #28]	@ (8000284 <__NVIC_EnableIRQ+0x38>)
 8000266:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800026a:	095b      	lsrs	r3, r3, #5
 800026c:	2001      	movs	r0, #1
 800026e:	fa00 f202 	lsl.w	r2, r0, r2
 8000272:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000276:	bf00      	nop
 8000278:	370c      	adds	r7, #12
 800027a:	46bd      	mov	sp, r7
 800027c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000280:	4770      	bx	lr
 8000282:	bf00      	nop
 8000284:	e000e100 	.word	0xe000e100

08000288 <tim2_1hz_interrupt_init>:
	TIM2->CR1 = CR1_CEN;
}


void tim2_1hz_interrupt_init(void)
{
 8000288:	b580      	push	{r7, lr}
 800028a:	af00      	add	r7, sp, #0
	/*Enable clock access to tim2*/
	RCC->APB1ENR |=TIM2EN;
 800028c:	4b12      	ldr	r3, [pc, #72]	@ (80002d8 <tim2_1hz_interrupt_init+0x50>)
 800028e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000290:	4a11      	ldr	r2, [pc, #68]	@ (80002d8 <tim2_1hz_interrupt_init+0x50>)
 8000292:	f043 0301 	orr.w	r3, r3, #1
 8000296:	6413      	str	r3, [r2, #64]	@ 0x40

	/*Set prescaler value*/
	TIM2->PSC =  1600 - 1 ;  //  16 000 000 / 1 600 = 10 000
 8000298:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800029c:	f240 623f 	movw	r2, #1599	@ 0x63f
 80002a0:	629a      	str	r2, [r3, #40]	@ 0x28
	/*Set auto-reload value*/
	TIM2->ARR =  10000 - 1;  // 10 000 / 10 000 = 1
 80002a2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002a6:	f242 720f 	movw	r2, #9999	@ 0x270f
 80002aa:	62da      	str	r2, [r3, #44]	@ 0x2c
	/*Clear counter*/
	TIM2->CNT = 0;
 80002ac:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002b0:	2200      	movs	r2, #0
 80002b2:	625a      	str	r2, [r3, #36]	@ 0x24

	/*Enable timer*/
	TIM2->CR1 = CR1_CEN;
 80002b4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002b8:	2201      	movs	r2, #1
 80002ba:	601a      	str	r2, [r3, #0]

	/*Enable TIM interrupt*/
	TIM2->DIER |=DIER_UIE;
 80002bc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80002c0:	68db      	ldr	r3, [r3, #12]
 80002c2:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80002c6:	f043 0301 	orr.w	r3, r3, #1
 80002ca:	60d3      	str	r3, [r2, #12]

	/*Enable TIM interrupt in NVIC*/
	 NVIC_EnableIRQ(TIM2_IRQn);
 80002cc:	201c      	movs	r0, #28
 80002ce:	f7ff ffbd 	bl	800024c <__NVIC_EnableIRQ>
}
 80002d2:	bf00      	nop
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	bf00      	nop
 80002d8:	40023800 	.word	0x40023800

080002dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002dc:	480d      	ldr	r0, [pc, #52]	@ (8000314 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e4:	480c      	ldr	r0, [pc, #48]	@ (8000318 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e6:	490d      	ldr	r1, [pc, #52]	@ (800031c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e8:	4a0d      	ldr	r2, [pc, #52]	@ (8000320 <LoopForever+0xe>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ec:	e002      	b.n	80002f4 <LoopCopyDataInit>

080002ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f2:	3304      	adds	r3, #4

080002f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f8:	d3f9      	bcc.n	80002ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fa:	4a0a      	ldr	r2, [pc, #40]	@ (8000324 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002fc:	4c0a      	ldr	r4, [pc, #40]	@ (8000328 <LoopForever+0x16>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000300:	e001      	b.n	8000306 <LoopFillZerobss>

08000302 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000302:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000304:	3204      	adds	r2, #4

08000306 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000306:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000308:	d3fb      	bcc.n	8000302 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030a:	f000 f811 	bl	8000330 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030e:	f7ff ff63 	bl	80001d8 <main>

08000312 <LoopForever>:

LoopForever:
  b LoopForever
 8000312:	e7fe      	b.n	8000312 <LoopForever>
  ldr   r0, =_estack
 8000314:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000318:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800031c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000320:	08000398 	.word	0x08000398
  ldr r2, =_sbss
 8000324:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000328:	2000001c 	.word	0x2000001c

0800032c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800032c:	e7fe      	b.n	800032c <ADC_IRQHandler>
	...

08000330 <__libc_init_array>:
 8000330:	b570      	push	{r4, r5, r6, lr}
 8000332:	4d0d      	ldr	r5, [pc, #52]	@ (8000368 <__libc_init_array+0x38>)
 8000334:	4c0d      	ldr	r4, [pc, #52]	@ (800036c <__libc_init_array+0x3c>)
 8000336:	1b64      	subs	r4, r4, r5
 8000338:	10a4      	asrs	r4, r4, #2
 800033a:	2600      	movs	r6, #0
 800033c:	42a6      	cmp	r6, r4
 800033e:	d109      	bne.n	8000354 <__libc_init_array+0x24>
 8000340:	4d0b      	ldr	r5, [pc, #44]	@ (8000370 <__libc_init_array+0x40>)
 8000342:	4c0c      	ldr	r4, [pc, #48]	@ (8000374 <__libc_init_array+0x44>)
 8000344:	f000 f818 	bl	8000378 <_init>
 8000348:	1b64      	subs	r4, r4, r5
 800034a:	10a4      	asrs	r4, r4, #2
 800034c:	2600      	movs	r6, #0
 800034e:	42a6      	cmp	r6, r4
 8000350:	d105      	bne.n	800035e <__libc_init_array+0x2e>
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	f855 3b04 	ldr.w	r3, [r5], #4
 8000358:	4798      	blx	r3
 800035a:	3601      	adds	r6, #1
 800035c:	e7ee      	b.n	800033c <__libc_init_array+0xc>
 800035e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000362:	4798      	blx	r3
 8000364:	3601      	adds	r6, #1
 8000366:	e7f2      	b.n	800034e <__libc_init_array+0x1e>
 8000368:	08000390 	.word	0x08000390
 800036c:	08000390 	.word	0x08000390
 8000370:	08000390 	.word	0x08000390
 8000374:	08000394 	.word	0x08000394

08000378 <_init>:
 8000378:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037a:	bf00      	nop
 800037c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037e:	bc08      	pop	{r3}
 8000380:	469e      	mov	lr, r3
 8000382:	4770      	bx	lr

08000384 <_fini>:
 8000384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000386:	bf00      	nop
 8000388:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038a:	bc08      	pop	{r3}
 800038c:	469e      	mov	lr, r3
 800038e:	4770      	bx	lr
